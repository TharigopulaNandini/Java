import pdfplumber

# Function to extract data from a specific cell using coordinates
def extract_data_with_coordinates(pdf_path, coordinates, page_number=0):
    """
    Extract data from a specific table cell using its coordinates.
    
    Args:
        pdf_path (str): Path to the PDF file.
        coordinates (tuple): (x0, y0, x1, y1) coordinates of the cell.
        page_number (int): Page number to extract the data from (0-indexed).

    Returns:
        str: Content of the cell that matches the coordinates.
    """
    x0, y0, x1, y1 = coordinates

    with pdfplumber.open(pdf_path) as pdf:
        # Select the specific page
        page = pdf.pages[page_number]

        # Find tables on the page
        tables = page.find_tables()

        # Iterate through all tables and their cells
        for table_index, table in enumerate(tables):
            for row_index, row in enumerate(table.rows):
                for cell_index, cell in enumerate(row.cells):
                    if cell and cell.bbox == (x0, y0, x1, y1):
                        print(f"Match found in Page {page_number+1}, Table {table_index}, Row {row_index}, Cell {cell_index}")
                        return cell.text  # Return the matching cell's content

    print("No matching cell found for the given coordinates.")
    return None

# Example usage
if __name__ == "__main__":
    pdf_path = "input.pdf"  # Replace with your PDF file path
    coordinates = (404, 563, 553, 617)  # Replace with your coordinates
    page_number = 0  # Replace with the page number (0-indexed)

    # Extract the data from the cell with the given coordinates
    cell_data = extract_data_with_coordinates(pdf_path, coordinates, page_number)

    if cell_data:
        print(f"Extracted Cell Data: {cell_data}")
