import pdfplumber

# Function to extract data from a specific table area
def extract_table_with_coordinates(pdf_path, coordinates, page_number=0):
    """
    Extract table data from a specific area using coordinates.
    
    Args:
        pdf_path (str): Path to the PDF file.
        coordinates (tuple): (x0, y0, x1, y1) coordinates of the area.
        page_number (int): Page number to extract the data from (0-indexed).

    Returns:
        list: Extracted table data (as a list of lists).
    """
    x0, y0, x1, y1 = coordinates

    with pdfplumber.open(pdf_path) as pdf:
        # Select the specific page
        page = pdf.pages[page_number]
        
        # Crop the page to the defined coordinates
        cropped_page = page.within_bbox((x0, y0, x1, y1))
        
        # Extract tables from the cropped area
        tables = cropped_page.extract_tables()
        
        # Assuming there's only one table in the cropped area
        if tables:
            return tables[0]
        else:
            print("No table found in the specified area.")
            return None

# Main execution
if __name__ == "__main__":
    pdf_path = "input.pdf"  # Replace with your PDF file path
    coordinates = (404, 563, 553, 617)  # Replace with your coordinates
    page_number = 0  # Replace with the page number where the table exists (0-indexed)

    # Extract the table
    table_data = extract_table_with_coordinates(pdf_path, coordinates, page_number)

    if table_data:
        print("Extracted Table Data:")
        for row in table_data:
            print(row)
